'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.matchBasePath = exports.matchPath = undefined;

var _create = require('babel-runtime/core-js/object/create');

var _create2 = _interopRequireDefault(_create);

var _map = require('babel-runtime/core-js/map');

var _map2 = _interopRequireDefault(_map);

var _pathToRegexp = require('path-to-regexp');

var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cache = new _map2.default(); /**
                                  * Universal Router (https://www.kriasoft.com/universal-router/)
                                  *
                                  * Copyright Â© 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.
                                  *
                                  * This source code is licensed under the Apache 2.0 license found in the
                                  * LICENSE.txt file in the root directory of this source tree.
                                  */

function decodeParam(val) {
  if (!(typeof val === 'string' || val.length === 0)) {
    return val;
  }

  try {
    return decodeURIComponent(val);
  } catch (err) {
    if (err instanceof URIError) {
      err.message = 'Failed to decode param \'' + val + '\'';
      err.status = 400;
    }

    throw err;
  }
}

function _matchPath(end, routePath, urlPath) {
  var key = routePath + '|' + end;
  var regexp = cache.get(key);

  if (!regexp) {
    var keys = [];
    regexp = { pattern: (0, _pathToRegexp2.default)(routePath, keys, { end: end }), keys: keys };
    cache.set(key, regexp);
  }

  var m = regexp.pattern.exec(urlPath);

  if (!m) {
    return null;
  }

  var params = (0, _create2.default)(null);
  var path = m[0];

  for (var i = 1; i < m.length; i++) {
    params[regexp.keys[i - 1].name] = decodeParam(m[i]);
  }

  return { path: path === '' ? '/' : path, keys: regexp.keys.slice(), params: params };
}

var matchPath = exports.matchPath = _matchPath.bind(undefined, true);
var matchBasePath = exports.matchBasePath = _matchPath.bind(undefined, false);