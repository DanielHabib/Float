'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var match = function () {
  var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(routes, pathOrContext) {
    var next = function () {
      var ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
        var _matches$next, newContext;

        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _matches$next = matches.next();
                value = _matches$next.value;
                done = _matches$next.done;

                if (!(value && !done)) {
                  _context.next = 23;
                  break;
                }

                newContext = (0, _assign2.default)({}, context, value);

                if (!value.route.action) {
                  _context.next = 23;
                  break;
                }

                if (!errorRoute) {
                  _context.next = 20;
                  break;
                }

                _context.prev = 7;
                _context.next = 10;
                return value.route.action(newContext, newContext.params);

              case 10:
                return _context.abrupt('return', _context.sent);

              case 13:
                _context.prev = 13;
                _context.t0 = _context['catch'](7);

                _context.t0.status = _context.t0.status || 500;
                newContext.error = _context.t0;
                return _context.abrupt('return', errorRoute.action(newContext, newContext.params));

              case 18:
                _context.next = 23;
                break;

              case 20:
                _context.next = 22;
                return value.route.action(newContext, newContext.params);

              case 22:
                return _context.abrupt('return', _context.sent);

              case 23:
                return _context.abrupt('return', undefined);

              case 24:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this, [[7, 13]]);
      }));
      return function next() {
        return ref.apply(this, arguments);
      };
    }();

    var context, root, result, value, done, errorRoute, matches;
    return _regenerator2.default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            context = typeof pathOrContext === 'string' || pathOrContext instanceof String ? { path: pathOrContext } : pathOrContext;
            root = Array.isArray(routes) ? { path: '/', children: routes } : routes;
            result = void 0;
            value = void 0;
            done = false;
            errorRoute = root.children.find(function (x) {
              return x.path === '/error';
            });
            matches = (0, _matchRoute2.default)(root, '', context.path);


            context.next = next;
            context.end = function (data) {
              result = data;done = true;
            };

          case 9:
            if (done) {
              _context2.next = 17;
              break;
            }

            _context2.next = 12;
            return next();

          case 12:
            result = _context2.sent;

            if (!(result !== undefined)) {
              _context2.next = 15;
              break;
            }

            return _context2.abrupt('break', 17);

          case 15:
            _context2.next = 9;
            break;

          case 17:
            if (!(result === undefined && errorRoute)) {
              _context2.next = 21;
              break;
            }

            context.error = new Error('Not found');
            context.error.status = 404;
            return _context2.abrupt('return', errorRoute.action(context, {}));

          case 21:
            return _context2.abrupt('return', result);

          case 22:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));
  return function match(_x, _x2) {
    return ref.apply(this, arguments);
  };
}(); /**
      * Universal Router (https://www.kriasoft.com/universal-router/)
      *
      * Copyright Â© 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.
      *
      * This source code is licensed under the Apache 2.0 license found in the
      * LICENSE.txt file in the root directory of this source tree.
      */

var _matchRoute = require('./matchRoute');

var _matchRoute2 = _interopRequireDefault(_matchRoute);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = match;