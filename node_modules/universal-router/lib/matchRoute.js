'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _matchPath = require('./matchPath');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = [matchRoute].map(_regenerator2.default.mark); /**
                                                             * Universal Router (https://www.kriasoft.com/universal-router/)
                                                             *
                                                             * Copyright Â© 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.
                                                             *
                                                             * This source code is licensed under the Apache 2.0 license found in the
                                                             * LICENSE.txt file in the root directory of this source tree.
                                                             */

function matchRoute(route, baseUrl, path) {
  var match, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, childRoute, newPath;

  return _regenerator2.default.wrap(function matchRoute$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          match = void 0;

          if (route.children) {
            _context.next = 6;
            break;
          }

          match = (0, _matchPath.matchPath)(route.path, path);

          if (!match) {
            _context.next = 6;
            break;
          }

          _context.next = 6;
          return {
            route: route,
            baseUrl: baseUrl,
            path: match.path,
            keys: match.keys,
            params: match.params
          };

        case 6:
          if (!route.children) {
            _context.next = 37;
            break;
          }

          match = (0, _matchPath.matchBasePath)(route.path, path);

          if (!match) {
            _context.next = 37;
            break;
          }

          _context.next = 11;
          return {
            route: route,
            baseUrl: baseUrl,
            path: match.path,
            keys: match.keys,
            params: match.params
          };

        case 11:
          _iteratorNormalCompletion = true;
          _didIteratorError = false;
          _iteratorError = undefined;
          _context.prev = 14;
          _iterator = (0, _getIterator3.default)(route.children);

        case 16:
          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
            _context.next = 23;
            break;
          }

          childRoute = _step.value;
          newPath = path.substr(match.path.length);
          return _context.delegateYield(matchRoute(childRoute, baseUrl + (match.path === '/' ? '' : match.path), newPath.startsWith('/') ? newPath : '/' + newPath), 't0', 20);

        case 20:
          _iteratorNormalCompletion = true;
          _context.next = 16;
          break;

        case 23:
          _context.next = 29;
          break;

        case 25:
          _context.prev = 25;
          _context.t1 = _context['catch'](14);
          _didIteratorError = true;
          _iteratorError = _context.t1;

        case 29:
          _context.prev = 29;
          _context.prev = 30;

          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }

        case 32:
          _context.prev = 32;

          if (!_didIteratorError) {
            _context.next = 35;
            break;
          }

          throw _iteratorError;

        case 35:
          return _context.finish(32);

        case 36:
          return _context.finish(29);

        case 37:
        case 'end':
          return _context.stop();
      }
    }
  }, _marked[0], this, [[14, 25, 29, 37], [30,, 32, 36]]);
}

exports.default = matchRoute;